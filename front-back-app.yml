# Front-end Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: front-end-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: front-end
  template:
    metadata:
      labels:
        app: front-end
    spec:
      containers:
      - name: front-end-container
        image: chatodo/frontend:1
        imagePullPolicy: Always
---
# Back-end Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: back-end-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: back-end
  template:
    metadata:
      labels:
        app: back-end
    spec:
      containers:
        - name: back-end-container
          image: chatodo/backend:1
          imagePullPolicy: Always
---
# Front-end Service (NodePort)
apiVersion: v1
kind: Service
metadata:
 name: front-end-service
spec:
 ports:
    - name: http
      port: 80
      targetPort: 8080
      nodePort: 31282
 type: NodePort
 selector:
    app: front-end
---
# Back-end Service
apiVersion: v1
kind: Service
metadata:
  name: back-end-service
spec:
  ports:
    - nodePort: 31281
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app: back-end
  type: NodePort
---
# Ingress, Traefik (Front-end)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: front-end-ingress
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: front-end.localhost
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: front-end-service
            port:
              number: 80
---
# Istio Gateway
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: gateway
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 8080
      name: http
      protocol: HTTP
    hosts:
    - "*"
---
# Istio VirtualService for Front-end
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: front-end-proxy
spec:
  hosts:
  - "*"
  gateways:
  - gateway
  http:
  - match:
    - uri:
        prefix: /frontend/
    rewrite:
      uri: /
    route:
    - destination:
        port:
          number: 80
        host: front-end-service.default.svc.cluster.local
---
# Istio VirtualService for Back-end
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: back-end-proxy
spec:
  hosts:
  - "*"
  gateways:
  - gateway
  http:
  - match:
    - uri:
        prefix: /backend/
    rewrite:
      uri: /
    route:
    - destination:
        port:
          number: 80
        host: back-end-service.default.svc.cluster.local
